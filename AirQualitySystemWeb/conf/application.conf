akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      #receive = on
      #autoreceive = on
      #lifecycle = on
    }
  }
}

//play.filters.enabled += play.filters.hosts.AllowedHostsFilter
# https://www.playframework.com/documentation/latest/SecurityHeaders
# Connect to localhost:9000 for content security policy on websockets
play.filters.headers {
  //contentSecurityPolicy = "connect-src 'self' ws://localhost:9000/client"

}

# https://www.playframework.com/documentation/latest/AllowedHostsFilter
# Allow requests to localhost:9000.
play.filters.hosts {
  allowed = ["localhost:9000","localhost:3306", "192.168.1.120:9000"]

}
slick.dbs{
  default.driver = "slick.driver.MySQLDriver$"
  default.db.driver = "com.mysql.jdbc.Driver"
  default.db.url = "jdbc:mysql://localhost:3306/test?autoReconnect=true&useSSL=false"
  default.db.user = "root"
  default.db.password = ""

}
fixedConnectionPool = 9

database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 100
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}